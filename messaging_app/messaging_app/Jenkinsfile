pipeline {
    agent any

    environment {
        VENV_DIR = 'venv'
    }

    tools {
        python 'Python 3' // requis si tu as configuré un interpréteur Python dans Jenkins (ShiningPanda)
    }

    stages {
        stage('Print Git Branch') {
            steps {
                sh 'git branch'
            }
        }

        stage('Clone Repository') {
            steps {
                git credentialsId: 'github-creds-id', url: 'https://github.com/YourUser/alx-backend-python.git', branch: 'main'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip3 install --upgrade pip
                    pip3 install -r messaging_app/requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    . venv/bin/activate
                    pytest messaging_app --junitxml=messaging_app/pytest-report.xml
                '''
            }
            post {
                always {
                    junit 'messaging_app/pytest-report.xml'
                }
            }
        }
    }
}
