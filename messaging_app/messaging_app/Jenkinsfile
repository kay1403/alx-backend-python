pipeline {
    agent any

    environment {
        VENV_DIR = 'venv'
    }

    tools {
        // Si configur√© via ShiningPanda ou manuellement
        python 'Python 3'
    }

    stages {
        stage('Print Git Branch') {
            steps {
                sh 'git branch'
            }
        }

        stage('Clone Repository') {
            steps {
                git credentialsId: 'github-creds-id', url: 'https://github.com/YourUser/alx-backend-python.git', branch: 'main'
            }
        }

        stage('Set Up Python Environment') {
            steps {
                dir('messaging_app') {
                    sh '''
                        python3 -m venv ${VENV_DIR}
                        . ${VENV_DIR}/bin/activate
                        pip3 install --upgrade pip
                        pip3 install -r requirements.txt
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('messaging_app') {
                    sh '''
                        . ${VENV_DIR}/bin/activate
                        pytest --junitxml=pytest-report.xml
                    '''
                }
            }
            post {
                always {
                    junit 'messaging_app/pytest-report.xml'
                }
            }
        }
    }
}
